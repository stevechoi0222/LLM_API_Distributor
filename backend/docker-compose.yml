version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: geo
      POSTGRES_PASSWORD: geo
      POSTGRES_DB: geo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geo"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://geo:geo@postgres:5432/geo}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DB_SCHEMA: ${DB_SCHEMA:-geo_app}
      DB_APPLY_MIGRATIONS: ${DB_APPLY_MIGRATIONS:-false}
      DB_COMPAT_MODE: ${DB_COMPAT_MODE:-false}
      USE_JSONB: ${USE_JSONB:-true}
      API_KEYS: ${API_KEYS:-dev-key-123}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      ENABLE_OPENAI: ${ENABLE_OPENAI:-true}
      ENABLE_GEMINI: ${ENABLE_GEMINI:-false}
      ENABLE_PERPLEXITY: ${ENABLE_PERPLEXITY:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./artefacts:/app/artefacts
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build: .
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://geo:geo@postgres:5432/geo}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DB_SCHEMA: ${DB_SCHEMA:-geo_app}
      DB_APPLY_MIGRATIONS: "false"
      DB_COMPAT_MODE: ${DB_COMPAT_MODE:-false}
      USE_JSONB: ${USE_JSONB:-true}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      ENABLE_OPENAI: ${ENABLE_OPENAI:-true}
      ENABLE_GEMINI: ${ENABLE_GEMINI:-false}
      ENABLE_PERPLEXITY: ${ENABLE_PERPLEXITY:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=4

volumes:
  postgres_data:


